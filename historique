Ajout des fichiers cheatsheet et Readme
git add github-git-cheat-sheet.pdf 
git add README.md


git status permet de connaitre les différences avec la branche précédente et les fichiers à commiter

git commit -m "insertion de deux fichiers"
Permet de commiter localement les modifs ce qui déclenche une nouvelle version et avance dans l'historique

git push 
Renvoie les fichiers vers le dépot distant 

(git push nom_du_depot nom_de_la_branche)

On modifie des trucs en ligne dans dépôt distant...

Puis on récupère les modifs en local 
git fetch
=> pas de merge encore donc modifs invisibles; mais permet d'interroger l'état du dépot distant par rapport au dépot local

git pull 
fait un fetch puis un merge

----------------------------------------------------------
Que se passe-t-il si on fait un fetch, 
sans faire de merge, 
puis qu'on modifie un fichier, et qu'on essaie de commiter ?

tom@tomXPS13:~/Bureau/dev/git/hello-world$ git status
Sur la branche master
Votre branche est en retard sur 'origin/master' de 1 commit, et peut être mise à jour en avance rapide.
  (utilisez "git pull" pour mettre à jour votre branche locale)

rien à valider, la copie de travail est propre
tom@tomXPS13:~/Bureau/dev/git/hello-world$ git commit -m "essai avec modif apres un fetch sans merge"
Sur la branche master
Votre branche est en retard sur 'origin/master' de 1 commit, et peut être mise à jour en avance rapide.
  (utilisez "git pull" pour mettre à jour votre branche locale)

Modifications qui ne seront pas validées :
	modifié:         historique

aucune modification ajoutée à la validation
 
--------------------------------------------------------------

On peut faire un git merge ou un git rebase... 
git pull fait par défaut fetch et merge, mais cela peut introduire un travail pas propre... 
